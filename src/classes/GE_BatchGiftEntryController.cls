/*
    Copyright (c) 2019, Salesforce.org
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Salesforce.org nor the names of
      its contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
*/
/**
* @author Salesforce.org
* @date 2020
* @group HGE
* @group-content
* @description Controller for the Gift Entry lightning web components used in batch mode.
*/
public with sharing class GE_BatchGiftEntryController {

    /**
     * @description Wraps the UTIL_Namespace.alignClassNSWithEnvironment method in a
     * try...catch statement to facilitate throwing an AuraHandledException when
     * an Exception is encountered.
     *
     * @param name The class name that needs to be namespace aligned.
     *
     * @return The name of the class prepended with the appropriate namespace.
     */
    @AuraEnabled
    public static String alignClassNSWithEnvironment(String name){
        try {
            return UTIL_Namespace.alignClassNSWithEnvironment(name);
        } catch (Exception e) {
            throw new AuraHandledException(
                    'A problem was encountered while aligning the namespace for ' + name + '.'
                    + ' Error details: ' + JSON.serialize(e)
            );
        }
    }

    /*******************************************************************************************************
    * @description Saves the data import record, dry runs the record, and returns updated
    * totals with the new row.
    * @param batchId: ID of the NPSP_Data_Import_Batch__c
    * @param dataImport: the NPSP_Data_Import__c record to update
    * @return String serialized DataImportModel
    */
    @AuraEnabled
    public static String saveAndDryRunRow(Id batchId, DataImport__c dataImport) {

        try {

            if (String.isNotBlank(dataImport.Id)) {
                Database.update(dataImport);
            } else {
                Database.insert(dataImport);
            }

            return BGE_DataImportBatchEntry_CTRL.runSingleDryRun(dataImport.Id, batchId);

        } catch (Exception ex) {

            // create custom lwc exception and throw it
            String jsonExceptionData = ERR_ExceptionData.createExceptionWrapperJSONString(ex);
            AuraHandledException auraHandled = new AuraHandledException(jsonExceptionData);
            auraHandled.setMessage(jsonExceptionData);
            throw auraHandled;

        }
    }

}